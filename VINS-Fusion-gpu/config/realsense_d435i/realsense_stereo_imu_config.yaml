%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1        
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/dji/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   
realsense: 1

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.


px4_T_body: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.8660254,  0.0000000,  -0.5,  -0.09660155,
         0.0000000,  1.0000000,  0.0000000, 0.0,        
       0.5,  0.0000000,  0.8660254, 0.18143233,
       0., 0., 0., 1. ]
 
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.003133, -0.00564483,0.99997916, 0.02358099,
       -0.99999177, -0.00259338,0.0031184, 0.00663303,
       0.00257572, -0.9999807,-0.0056529, -0.00909506, 
       0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.00232703, -0.00409543,0.99998891, 0.02330239,
       -0.99999398, -0.00258151,0.00231647, -0.04365314,
       0.002572, -0.99998828,-0.00410141, -0.00992756, 
       0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150                # max feature number in feature tracking
min_dist: 10            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
#acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
#acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
#gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
acc_n: 0.0158571111424  # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00145950651918          # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.000561686614854         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 1.45347322073e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0020700240938                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/dji/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
