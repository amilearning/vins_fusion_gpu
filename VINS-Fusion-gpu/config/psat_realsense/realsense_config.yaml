%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 0         
num_of_cam: 2  

imu_topic: "/mavros/imu/data"
image0_topic: "/stereo/left/image_raw"
image1_topic: "/stereo/right/image_raw"
output_path: "/home/tong/output/"

cam0_calib: "cam0.yaml"
cam1_calib: "cam1.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d   
#    data: [ 1.0000000,  0.0,  0.0, 0.0, 0.0,  0.0000000,  0.0, 0.035, 0.0, 0.0,  0.0, 0.0, 0., 0., 0., 1. ]
   data: [ 0.0000000,  0.0,  1.0, 0.1,
       -1.0,  0.0000000,  0.0, 0.035, 
        0.0, -1.0,  0.0, 0.1,
       0., 0., 0., 1. ]
#    data: [ 0.99998514089921520551, 0.005017264093426008356,
#        -0.0021297794522275713664, 0.004651247505937338681,
#        -0.0050142058226576088605, 0.99998639273669268099,
#        0.0014369404919551904253, -0.0082346330724775892185,
#        0.002136960518268850472, -0.0014262394850484669969,
#        0.99999669923015518423, -0.024262791259650795675, 0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#    data: [ 1.0000000,  0.0,  0.0, 0.0, 0.0,  0.0000000,  0.0, -0.035, 0.0, 0.0,  0.0, 0.0, 0., 0., 0., 1. ]
   data: [ 0.0000000,  0.0,  1.0, 0.1,
       -1.0,  0.0000000,  0.0, -0.035, 
        0.0, -1.0,  0.0, 0.1,
       0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1
#feature traker paprameters
max_cnt: 120            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.00186         # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00018665         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.006         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 3.8785e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                     # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
# load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
# pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path
# save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
